#!/bin/bash
tableMetaData=""
function validTable (){
if [[ -f ./$1  ]]
then
	echo "THERE IS A Table WITH THE SAME NAME "
	return 0;
fi
for i in $1 ;
do
	if [[ $i =~ [^a-zA-Z] ]]		
	then
		echo "HAVE UNVALID CHARACTER >> IT MUST BE ALPHABETICS"
		return 0;
	fi
done
return 1;
} 
function validIntNumber(){
echo "Enter The Number Of Columns"
 while true
      do
          
            read col
            validNum=1;
            for i in $col;
            do
                  if [[ $i =~ [^0-9] ]]
                  then
                        validNum=0
                        echo "Please Enter a Number"
                  fi
            done
            if [ $validNum -eq 1 ]
            then
                  creaTableMetaData
                  insertTableMetaData
                  echo "table created successfully"
                  break
            fi
      done
}
function insertTableMetaData(){
      isPrimary='n'
      primaryFeild=-1
      i=0;
      while [ $i -lt $col ]
      do
            if [ $isPrimary == "n" ]
            then
                  echo "Enter y/n Is Primary "
                  read isPrimary
                  let primaryFeild=$i
            fi
            echo "Enter The Field Name"
            read fname
            while true
                  do
                        echo "
                        Enter The Field Type 
                        1) int
                        2) string
                        "
                        read ftypeNum
                        if [[ $ftypeNum -eq 1 || $ftypeNum -eq 2 ]]
                               then
                              if [ $ftypeNum -eq 1 ]
                              then
                                    ftype="int"
                              else
                                    ftype="string"
                              fi
                              break

                        fi
                  done
      

            echo "Enter y/n Dose it The Accept Null "
            read nullable
            if ( [ $isPrimary == "y" ] &&  [ $primaryFeild -eq $i ] )
            then
                  echo "y:$fname:$ftype">>DBMS/$DBname/"$tableMetaData"
            else
                   echo "n:$fname:$ftype">>DBMS/$DBname/"$tableMetaData"
            fi
            let i=$i+1;
      done

}
function creaTableMetaData(){

      tableMetaData=".${table}@"
      touch DBMS/$DBname/"$tableMetaData"
}
function CreateTable(){

      while true
      do
            echo "Enter Table name "
            read table
            validTable $table
            if [ $? -eq 1 ]
            then
                  touch DBMS/$DBname/$table
                  validIntNumber 
                  break;
            fi
      

      done
}


function ListTables(){
      echo "Your Tables are:"
      ls DBMS/$DBname
}


function DropTable(){
      echo "Enter Table name "
      read table
      if [[ -f ./DBMS/$DBname/$table ]]; then
      rm DBMS/$DBname/$table
      rm DBMS/$DBname/".$table@"
      echo "Table $table Removed"
      else 
      echo "invalid Table"
      fi
}


function Delete_from_Table()
{
echo "TODO Delete_from_Table"
}
function Update_Table()
{
echo "TODO Delete_from_Table"
}
function Insert_into_Table()
{
      . ./InsertDataIntoTables
}
function Select_from_Table()
{
     . ./SelectFromTable
}


echo "Connectd to $DBname Successfully"
echo "Enter Your Choice Please:"
options=("Create Table" "List Tables" "Drop Table" "Insert into Table" "Select from Table" "Delete from Table" "Update Table" "Exit")
select opt in "${options[@]}"
do
    case $opt in
            "Create Table")
                  CreateTable
                  ;;
            "List Tables")
                  ListTables
                  ;;
            "Drop Table")
                  DropTable
                  ;;
            "Insert into Table")
                  Insert_into_Table
                  ;;
            "Select from Table")
                  Select_from_Table
                  ;;
            "Delete from Table")
                  Delete_from_Table
                  ;;
            "Update Table")
                  Update_Table
                  ;;
            "Exit")
                  exit 
                  ;;
    esac
done